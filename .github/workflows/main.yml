name: Test

on: push

jobs:
  test:
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:16.1-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: drag
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check server
        run: npm run type-check -w=server

      - name: Type check client
        run: npm run type-check -w=client

      - name: Lint server code
        run: npm run lint -w=server

      - name: Lint client code
        run: npm run lint -w=client

      - name: Server tests
        run: npm run test:db -w=server
        env:
          TOKEN_KEY: ${{secrets.TOKEN_KEY}}
          DB_NAME: ${{secrets.DB_NAME}}
          DB_USER: ${{secrets.DB_USER}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}

          AWS_REGION: ${{secrets.AWS_REGION}}
          AWS_BUCKET_NAME: ${{secrets.AWS_BUCKET_NAME}}
          AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      # - name: Client tests
      #   run: npm run test:unit -w=client

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium firefox

      - name: Start server for E2E tests
        run: npm run dev -w=server &
        env:
          # Pass the same database credentials to our server environment variables,
          # just like we would if we had an .env file.
          # These credentials are not secret, so we can commit them to our repository.
          DB_USER: turing
          DB_PASSWORD: turing
          DB_NAME: testdb

          # port to start the server on
          PORT: 3000

      - name: Build front end for E2E tests
        run: npm run build -w=client
        env:
          VITE_API_ORIGIN: http://localhost:3000
          VITE_API_PATH: /api/v1/trpc

      - name: Health check
        uses: jtalk/url-health-check-action@v4
        with:
          # Check the following URLs one by one sequentially
          url: http://localhost:3000/api/health
          # Follow redirects, or just report success on 3xx status codes
          follow-redirect: false # Optional, defaults to "false"
          # Fail this action after this many failed attempts
          max-attempts: 5 # Optional, defaults to 1
          # Delay between retries
          retry-delay: 5s # Optional, only applicable to max-attempts > 1

      - name: Test client E2E
        run: npm run test:e2e -w=client

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: client/playwright-report/
          retention-days: 7
